'''(№ 8215) (О. Лысенков) На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
1. Строится пятеричная запись числа N.
2. Далее эта запись обрабатывается по следующему правилу:
  а) если пятеричная запись оканчивается на 0, то все единицы в записи меняются на четвёрки, а все четвёрки меняются
  на единицы, а затем к числу слева приписывается 33;
  б) если пятеричная запись оканчивается не на 0, то к записи справа приписывается 44, а затем первый и
  последний разряды полученной записи меняются на 3 и 2 соответственно.
Полученная таким образом запись является пятеричной записью искомого числа R. Укажите минимальное число N,
для которого результатом работы алгоритма является наибольшее число R, меньшее 1922. В ответе это число запишите
в десятичной системе счисления. '''

def per(n: int, q: int) -> str:
    """Перевод из 10-ич в какую-то с основанием q"""
    # костыль для обработки n = 0
    if n == 0:
        return '0'
    # задаем алфавит до 36-рич системы счисления включительно
    alf = '0123456789abcdefghijklmnopqrstuvwxyz'
    # начальное состояние строки с переводом
    s = ''
    # стандартный цикл работы с цифрами числа при переводе
    while n > 0:
        # запись новой цифры слева в результат
        s = alf[n % q] + s
        # удаление обработанной цифры
        n //= q
    # возврат результата - строка с записью в нужной системе счисления
    return s

# инициализируем список для хранения ответов
ans = []
# перебираем натуральные числа в цикле
for n in range(1, 1000):
    # вызываем функцию перевода в нужную систему счисления
    nn = per(n, 5)  # str
    # проверяем условие из задачи
    if n % 5 == 0:  # математика на 0 в конце в 5-рич системе
        # if nn[-1] == '0': строковая проверка 0 в конце в 5-рич системе
        nn = '33' + nn.replace('1', '5').replace('4', '1').replace('5', '4')
    else:
        nn = nn + '44'
        nn = '3' + nn[1:-1] + '2'
    # возвращаем число в 10-ич систему
    r = int(nn, 5)
    # проверяем условие задачи на ответ
    if r < 1922:
        # для сложных условий - сохраняем кортеж - пару (результат, исходное число)
        ans.append((r, n))
# сортируем список ответов с кортежами по ключу - (результат по убыванию, исходное число по возр)
print(sorted(ans, key=lambda x: (-x[0], x[1]))[0])